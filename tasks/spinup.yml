---
- name: Template the SSH spinup script
  template:
    src: spinup.sh.j2
    dest: /root/spinup.sh
    mode: 0755

- name: Template the virtual machine "get IP" script
  template:
    src: getip.sh.j2
    dest: /root/getip.sh
    mode: 0755

- name: Get the virsh list
  command: >
    virsh list
  register: virsh_list
  changed_when: false
  tags:
    - skip_ansible_lint
    # Skip ANSIBLE0012 because we need the virsh list each time we run

- name: Run spinup for each host that doesn't exist
  command: >
    /root/spinup.sh -n {{ item.name }} -m {{ item.system_ram_mb | default(system_default_ram_mb) }}
    -c {{ item.system_cpus | default(system_default_cpus) }}
    {% if item.static_ip is defined %} -s {{ item.static_ip }} {% endif %}
    {% if item.add_param is defined %} -p "{{ item.add_param }}" {% endif %}
  when: "item.name not in virsh_list.stdout"
  with_items: "{{ virtual_machines }}"

- name: Get IP Addresses for all VMs
  command: >
    cat /tmp/{{ item.name }}.ip.txt
  register: vm_ip_addresses
  changed_when: false
  with_items: "{{ virtual_machines }}"
  tags:
    - skip_ansible_lint
    # Skip ANSIBLE0012 because we want the IP addresses every time

- name: Populate dictionary of IPs
  set_fact:
    vm_ips_dict: "{{ vm_ips_dict|default({}) | combine( {item.item.name: item.stdout} ) }}"
  with_items: "{{ vm_ip_addresses.results }}"

- name: Here are the IPs of the VMs
  debug: "msg={{ vm_ips_dict }}"

- name: Flush out /etc/hosts, always (for simplicity)
  lineinfile:
    dest: /etc/hosts
    state: absent
    regexp: '{{ item.key }}'
  with_dict: "{{ vm_ips_dict }}"

- name: Build out /etc/hosts for each VM
  lineinfile:
    dest: /etc/hosts
    line: '{{ item.value }} {{ item.key }}'
    regexp: '{{ item.key }}'
  with_dict: "{{ vm_ips_dict }}"

- name: Setup default ssh_proxy_host
  set_fact:
    ssh_proxy_host: "{{ ansible_host }}"
  when: not ssh_proxy_host is defined and ssh_proxy_enabled

- name: Validate our inventory directory exists
  file:
    path: "{{ playbook_dir }}/../inventory/"
    state: directory

- name: Build a local inventory
  template:
    src: vms.local.j2
    dest: "{{ playbook_dir }}/../inventory/vms.local.generated"
  delegate_to: 127.0.0.1
  ignore_errors: yes
