---
# DNS configuration
- name: Get IP Addresses for all VMs
  command: >
    cat /tmp/{{ item.name }}.ip.txt
  register: vm_ip_addresses
  changed_when: false
  with_items: "{{ virtual_machines }}"
  tags:
    - skip_ansible_lint
    # Skip ANSIBLE0012 because we want the IP addresses every time

- name: Populate dictionary of IPs
  set_fact:
    vm_ips_dict: "{{ vm_ips_dict|default({}) | combine( {item.item.name: item.stdout} ) }}"
  with_items: "{{ vm_ip_addresses.results }}"

- name: Remove DNS entry
  block:
    - name: Remove master
      #debug: msg="{{ item.name }}, {{ vm_ips_dict[item.name] }}"
      shell: >
        virsh net-update default delete dns-host "<host ip='{{ vm_ips_dict[item.name] }}'></host>"
      ignore_errors: True
      with_items: "{{ virtual_machines }}"
    - name: Remove etcd-client-ssl.tcp entry
      shell: |
        virsh net-update default delete dns-srv \
            "<srv service='etcd-client-ssl' protocol='tcp' \
              domain='{{ ocp4_cluster_name }}.{{ ocp4_base_domain }}' \
              target='{{ ocp4_cluster_name }}-etcd-0.{{ ocp4_base_domain }}' \
              port='2379' priority='10' weight='10'/>" \
            --live --config
      ignore_errors: True
    - name: Remove etcd-server-ssl.tcp entry
      shell: |
        virsh net-update default delete dns-srv \
            "<srv service='etcd-server-ssl' protocol='tcp' \
              domain='{{ ocp4_cluster_name }}.{{ ocp4_base_domain }}' \
              target='{{ ocp4_cluster_name }}-etcd-0.{{ ocp4_base_domain }}' \
              port='2380' priority='10' weight='10'/>" \
            --live --config
      ignore_errors: True
  when: teardown | default('False') | bool

- name: Delete the switch DNS script
  file: path=/root/ocp4-change-dns.sh
    state=absent
  when: (teardown | default('False') | bool)
