---
- name: Get list of virtual machines
  virt:
    command: list_vms
  register: virt

- name: Destroy all VMs
  command: >
    virsh destroy {{ item.name }}
  with_items: "{{ virtual_machines }}"
  when: item.name in virt.list_vms

- name: Undefine all VMs
  command: >
    virsh undefine --remove-all-storage {{ item.name }}
  with_items: "{{ virtual_machines }}"
  when: item.name in virt.list_vms

- name: Remove spare disk images
  file:
    dest: "{{ spare_disk_location }}/{{ item.name }}.img"
    state: absent
  with_items: "{{ virtual_machines }}"
  when: item.name in virt.list_vms

- name: Remove spare disk attached semaphor
  file:
    dest: "{{ spare_disk_location }}/.attached-{{ item.name }}"
    state: absent
  with_items: "{{ virtual_machines }}"
  when: item.name in virt.list_vms

- name: Destroy volume pool
  command: >
    virsh pool-destroy {{ item.name }}
  with_items: "{{ virtual_machines }}"
  when: item.name in virt.list_vms

- name: Undefine volume pool
  command: >
    virsh pool-undefine {{ item.name }}
  with_items: "{{ virtual_machines }}"
  when: item.name in virt.list_vms

- name: Get list of VM networks
  virt_net:
    command: info
  register: networks

- name: Delete subnetworks
  block:
  - name: Delete network for IPv6
    block:
      - name: Destroy network for IPv6
        virt_net:
          command: destroy
          name: k8s_ipv6_private
      - name: Undefine network for IPv6
        virt_net:
          command: undefine
          name: k8s_ipv6_private
    when: networks.networks.k8s_ipv6_private is defined

  - name: Delete network for multus-2nics
    block:
      - name: Destroy network for multus-2nics
        virt_net:
          command: destroy
          name: multus_2nics
      - name: Undefine network for multus-2nics
        virt_net:
          command: undefine
          name: multus_2nics
    when: networks.networks.multus_2nics is defined

- name: Remove virtual machine directory
  file:
    dest: "{{ images_directory }}/{{ item.name }}"
    state: absent
  with_items: "{{ virtual_machines }}"
  when: item.name in virt.list_vms
