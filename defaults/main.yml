---

# Mode options ----------------------------------------

# Determine which mode we're using
# default to spin up, but, if teardown is true, tear down the VMs.
teardown: false

# Virtual Machines ------------------------------------
hugepages_enabled: false
default_ansible_user: centos    # default user to login as via ansible
ssh_proxy_enabled: false
ssh_proxy_user: root
system_default_ram_mb: 2048
system_default_cpus: 4
virtual_machines:
  - name: kube-master
    node_type: master
  - name: kube-node-1
    node_type: nodes
  - name: kube-node-2
    node_type: nodes
  - name: kube-node-3
    node_type: nodes
use_host_passthrough: true

# With qemu and a nested virt situation one may 
# need to skip specifying the vcpus
nested_virt_qemu_skip_vcpus: false

# Disk options -----------------------------------------

# Spare disk sizes (for virtual machines)
spare_disk_attach: true
spare_disk_size_megs: 10240
spare_disk_location: "/var/lib/libvirt/images"
spare_disk_dev: vdb


# Network options --------------------------------------

# Enables a bridge to the outside LAN
# (as opposed to using virbr0)
bridge_networking: false
bridge_name: virbr0
bridge_physical_nic: "enp1s0f1"
bridge_network_name: "br0"
bridge_network_cidr: 192.168.1.0/24
network_type: "default"
ipv6_enabled: false


# Virtualization Host options --------------------------

images_directory: /home/images
centos_genericcloud_url: "https://cloud.centos.org/centos/7/images/CentOS-7-x86_64-GenericCloud-1907.qcow2"
image_archive_name: CentOS-7-x86_64-GenericCloud.qcow2.xz
image_destination_name: CentOS-7-x86_64-GenericCloud.qcow2

# Allows one to skip the steps to initially setup a virthost
# convenient when iterating quickly.
skip_virthost_depedencies: false

